/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.3/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'java'
    id 'application'
    id 'info.solidsoft.pitest' version '1.5.1'
    id 'jacoco'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}
mainClassName = 'max.Maximum'
sourceCompatibility = '1.8'
targetCompatibility = '1.8'
dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.2-jre'
    // Use JUnit test framework
    testCompile('org.junit.jupiter:junit-jupiter-api:5.3.1')
    testCompile('org.junit.jupiter:junit-jupiter-engine:5.3.1')
    classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.5.1'
}
/*
test{
	useJunitPlatform()
	testLogging.showStandardStreams=true
	ignoreFailures = true
    jacoco {
        append = false
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpDir = file("$buildDir/jacoco/classpathdumps")
    }
}
test{
finalizedBy jacocoTestReport
}

jacocoTestCoverageVerification {
     violationRules { 
             rule { 
                  limit { 
                        minimum = 1.0
                  } 
             } 
     } 
}
jacocoTestReport
{
dependOn test
    reports {
        xml.enabled true
        csv.enabled false
        
    }
}
jacocoTestReport {
    group = "Reporting"
    reports {
        xml.enabled true
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
    executionData(test)
}
check.dependsOn jacocoTestCoverageVerification*/